using System;
using System.Collections.Generic;
using Jypeli;
using Jypeli.Assets;
using Jypeli.Controls;
using Jypeli.Widgets;

///@author Saad Turky / igsaturk
///@version 8.11.2018
/// <summary>
/// floating ballpeli
/// </summary>
public class floating_ball : PhysicsGame
{
    PhysicsObject ball2;

    private Image[] vihuKuvia = LoadImages("Cigur", "King", "Leader");

    private Image star = LoadImage("tahti");

    private SoundEffect bomb = LoadSoundEffect("explosion");

    private void HittingVector(Vector suunta)
    {
        ball2.Velocity = suunta;
    }

    /*
    private void AloitaPeli()
    {
        ball2 = LuoLaskuri();
        SeuraavaKentta();
    }

    private void SeuraavaKentta()
    {
        ClearAll();
        LuoKentta("kentta" + kentta);
        //kenttaNro++;
    
        Camera.Follow();
        Camera.ZoomFactor = 1.2;
        Camera.StayInLevel = true;
    }

    private void TormasitPorttiin(PhysicsObject Nextlevel, PhysicsObject ball2)
    {
        MessageDisplay.Add("portista seuraavaan kenttaan");
     
        SeuraavaKentta();
    }

    */


    /// <summary>
    /// creating the ball
    /// </summary>
    /// <param name="peli"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    public void DrawBall(Game peli, double x, double y)
    {
        ball2 = new PhysicsObject(2 * 25, 2 * 25, Shape.Circle);
        ball2.Position = new Vector(-450, -350);
        ball2.Color = Color.Red;
        ball2.Tag = "vihu";
        ball2.Image = LoadImage("ball");
        peli.Add(ball2);
        AddCollisionHandler(ball2, "vihu", PelaajaTormasi);
    }


    /// <summary>
    /// creating the obstacle1
    /// </summary>
    /// <param name="peli"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="boxsize"></param>
    public void DrawSquare(Game peli, double x, double y, double w, double h, Color color )
    {
        PhysicsObject square = new PhysicsObject(w, h, Shape.Rectangle);
        square.X = x;
        square.Y = y;
        AddCollisionHandler(square, "vihu", PelaajaTormasi);
        peli.Add(square);
    }


    /// <summary>
    /// next level
    /// </summary>
    /// <param name="peli"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="boxsize"></param>
    public void NextLevel(Game peli, double x, double y, double w4, double h4)
    {
        PhysicsObject Shape1 = new PhysicsObject(w4, h4, Shape.Star );
        Shape1.X = x;
        Shape1.Y = y;
        Shape1.Color = Color.Red;
       /// Shape1.Tag = "Shape1";  
        Shape1.Image = LoadImage("tahti");
        AddCollisionHandler(Shape1, "vihu", TormaaTahteen);
        peli.Add(Shape1);
    }

    /// <summary>
    /// Destroy the star (Shape1)
    /// </summary>
    /// <param name="Shape1"></param>
    /// <param name="ball2"></param>
    void TormaaTahteen(PhysicsObject Shape1, PhysicsObject ball2)
    {
        MessageDisplay.Add("Ok!");
        Shape1.Destroy();
    }


    public override void Begin()
    {
        Level.Size = Screen.Size;
        // Level.Width = Screen.Width
        // Level.Height = Screen.Height;
        Camera.ZoomToLevel();
        Level.CreateBorders();
        Level.Background.Image = LoadImage("village");
        /// calling the Subroutine of the ball
        DrawBall(this, 0, 0);

       ///calling the subrourine of the obstacle1 ( it is an object ) to become six obstacles 
        int n;
        n = 6;
        double h = 250;
        double w = 90;
        double xcoordinate = -290;
        double ycoordinate = -340;
        double oldboxsize = 0;
        
        for (int i = 0; i < n; i++)
        {
            oldboxsize = h;
            DrawSquare(this, xcoordinate,  ycoordinate, w,h, Color.Blue);
            xcoordinate = xcoordinate + 100 + 50;
            h = h * 0.5 + oldboxsize * 0.8;
        }


        ///calling the subrourine of the obstacle2 ( it is an object ) to become six obstacles 
        int y;
        y = 7;
        double h1 = 150;
        double w1 = 90;
        double xcoordinate1 = -400;
        double ycoordinate2 = 300;
        for (int i = 0; i < y; i++)
        {
            DrawSquare(this, xcoordinate1, ycoordinate2, w1,h1, Color.Green);
            xcoordinate1 = xcoordinate1 + 100 + 50;
        }

        /// calling the subroutine of the next level for the lower part
        int s = 6;
        double h4 = 50;
        double w4 = 50;
        double xcoordinate2 = -215;
        double ycoordinate3 = -350;
        for( int i = 1; i < s; i++ )
        {
          NextLevel(this, xcoordinate2, ycoordinate3, w4, h4);
          xcoordinate2 = xcoordinate2 + 75 + 75;
        }


        /// calling the subroutine of the next level for the upper part
        int r = 8;
        double h5 = 50;
        double w5 = 50;
        double xcoordinate4 = -325;
        double ycoordinate5 = 350;
        for (int i = 1; i < r; i++)
        {
            NextLevel(this, xcoordinate4, ycoordinate5, w5, h5);
            xcoordinate4 = xcoordinate4 + 75 + 75;
        }





        Keyboard.Listen(Key.Up, ButtonState.Pressed, HittingVector, "Lyö valkoinen palloa ylöspäin", new Vector(0, 100));
        Keyboard.Listen(Key.Down, ButtonState.Pressed, HittingVector, "Lyö valkoinen palloa ylöspäin", new Vector(0, -100));
        Keyboard.Listen(Key.Left, ButtonState.Pressed, HittingVector, "Lyö valkoinen palloa ylöspäin", new Vector(-100, 0));
        Keyboard.Listen(Key.Right, ButtonState.Pressed, HittingVector, "Lyö valkoinen palloa ylöspäin", new Vector(100, 0));
        




        PhoneBackButton.Listen(ConfirmExit, "Lopeta peli");
        Keyboard.Listen(Key.Escape, ButtonState.Pressed, ConfirmExit, "Lopeta peli");
    }

    /// <summary>
    /// Explosion
    /// </summary>
    /// <param name="pelaaja"></param>
    /// <param name="vihu"></param>
    public void PelaajaTormasi(PhysicsObject pelaaja, PhysicsObject vihu)
    {
            Explosion rajahdys = new Explosion(vihu.Width * 100);
            rajahdys.Position = vihu.Position;
            rajahdys.UseShockWave = false;
            this.Add(rajahdys);
            bomb.Play();
            Remove(vihu);
            MessageDisplay.Add("Try Again!");
            Timer.SingleShot(2.0, () => { ClearAll(); Begin(); });
    }

}
