using System;
using System.Collections.Generic;
using Jypeli;
using Jypeli.Assets;
using Jypeli.Controls;
using Jypeli.Widgets;

///@author Saad Turky / igsaturk
///@version 8.11.2018
/// <summary>
/// floating ballpeli
/// </summary>
public class floating_ball : PhysicsGame
{
    PhysicsObject ball2;

    /*
    IntMeter pisteLaskuri;

    void LuoPistelaskuri()
    {
        pisteLaskuri = new IntMeter(0);
        Label pisteNaytto = new Label("collectedStars");
        pisteNaytto.X = Screen.Left + 100;
        pisteNaytto.Y = Screen.Top - 100;
        pisteNaytto.TextColor = Color.Black;
        pisteNaytto.Color = Color.White;
        pisteNaytto.Title = "Pisteet";
        pisteLaskuri.Value += 1;
        pisteLaskuri.Value = 6;
        ///pisteLaskuri.AddOverTime(3, 5);
        /// pisteNaytto.IntFormatString = "Pisteitä: {0:D1}";
        pisteNaytto.BindTo(pisteLaskuri);
        Add(pisteNaytto);
    }
    */


    private Image[] vihuKuvia = LoadImages("Cigur", "King", "Leader");

    private Image star = LoadImage("tahti");

    private SoundEffect bomb = LoadSoundEffect("explosion1");

    private SoundEffect eating = LoadSoundEffect("eat");

    const int stars = 2;

    private int collectedStars = 0;

    ///const int stars1 = 3;

    ///private int collectedStars1 = 0;


    /// <summary>
    /// to hit the vector
    /// </summary>
    /// <param name="suunta"></param>
    private void HittingVector(Vector suunta)
    {
        ball2.Velocity = suunta;
    }


    /// <summary>
    /// creating the ball
    /// </summary>
    /// <param name="peli"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    public void DrawBall(Game peli, double x, double y)
    {
        ball2 = new PhysicsObject(2 * 25, 2 * 25, Shape.Circle);
        ball2.Position = new Vector(-450, -350);
        ball2.Color = Color.Red;
        ball2.Tag = "vihu";
        ball2.Image = LoadImage("ball");
        peli.Add(ball2);
        ///AddCollisionHandler(ball2, "vihu", PelaajaTormasi);
      
    }


    /// <summary>
    /// creating the obstacle1
    /// </summary>
    /// <param name="peli"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="boxsize"></param>
    public void DrawSquare(Game peli, double x, double y, double w, double h, Color color)
    {
        PhysicsObject square = new PhysicsObject(w, h, Shape.Rectangle);
        square.X = x;
        square.Y = y;
        square.Color = color;
        square.MakeStatic();
        AddCollisionHandler(square, "vihu", PelaajaTormasi);
        peli.Add(square);
    }


    /// <summary>
    /// next level
    /// </summary>
    /// <param name="peli"></param>
    /// <param name="x"></param>
    /// <param name="y"></param>
    /// <param name="boxsize"></param>
    public void Stars(Game peli, double x, double y, double w4, double h4)
    {
        PhysicsObject Shape1 = new PhysicsObject(w4, h4, Shape.Star);
        Shape1.X = x;
        Shape1.Y = y;
        Shape1.Color = Color.Red;
        /// Shape1.Tag = "Shape1";  
        Shape1.Image = LoadImage("tahti");
        AddCollisionHandler(Shape1, "vihu", TormaaTahteen);
        peli.Add(Shape1);
    }


    /// <summary>
    /// Destroy the star (Shape1)
    /// </summary>
    /// <param name="Shape1"></param>
    /// <param name="ball2"></param>
    void TormaaTahteen(PhysicsObject Shape1, PhysicsObject ball2)
    {
        MessageDisplay.Add("Hyvä!");
        Shape1.Destroy();
        eating.Play();

        collectedStars++;
        if (collectedStars == stars)
        {
              SecondMap();
        }

    
        /*
        collectedStars1++;
        if (collectedStars1 == stars1)
        {
            ThirdMap();
        }
       */
    }


    public override void Begin()
    {
        FirstMap();
        Buttons();
        MessageDisplay.Add("Taso 1!");
        ///LuoPistelaskuri();
    }


    /// <summary>
    /// Explosion
    /// </summary>
    /// <param name="pelaaja"></param>
    /// <param name="vihu"></param>
    public void PelaajaTormasi(PhysicsObject pelaaja, PhysicsObject vihu)
    {
        Explosion rajahdys = new Explosion(vihu.Width * 100);
        rajahdys.Position = vihu.Position;
        rajahdys.UseShockWave = false;
        this.Add(rajahdys);
        bomb.Play();
        Remove(vihu);
        MessageDisplay.Add("Yritä Uudelleen!");
        Timer.SingleShot(2.0, () => { ClearAll(); Begin();});
        collectedStars=0;
    }

    /// <summary>
    /// to control with bottons
    /// </summary>   
    public void Buttons()
    {
        Keyboard.Listen(Key.Up, ButtonState.Pressed, HittingVector, "Lyö valkoinen palloa ylöspäin", new Vector(0, 100));
        Keyboard.Listen(Key.Down, ButtonState.Pressed, HittingVector, "Lyö valkoinen palloa ylöspäin", new Vector(0, -100));
        Keyboard.Listen(Key.Left, ButtonState.Pressed, HittingVector, "Lyö valkoinen palloa ylöspäin", new Vector(-100, 0));
        Keyboard.Listen(Key.Right, ButtonState.Pressed, HittingVector, "Lyö valkoinen palloa ylöspäin", new Vector(100, 0));

        PhoneBackButton.Listen(ConfirmExit, "Lopeta peli");
        Keyboard.Listen(Key.Escape, ButtonState.Pressed, ConfirmExit, "Lopeta peli");

    }


    /// <summary>
    /// The First Level
    /// </summary>
    public void FirstMap()
    {
        Level.Size = Screen.Size;
        // Level.Width = Screen.Width
        // Level.Height = Screen.Height;
        Camera.ZoomToLevel();
        Level.CreateBorders();
        Level.Background.Image = LoadImage("village");
        MessageDisplay.Position = new Vector(20, 150);


        /// calling the Subroutine of the ball
        DrawBall(this, 0, 0);


        ///calling the subrourine of the obstacle1 ( it is an object ) to become six obstacles 
        int n = 6;
        double h = 250;
        double w = 90;
        double xcoordinate = -290;
        double ycoordinate = -340;
        double oldboxsize = 0;

        for (int i = 0; i < n; i++)
        {
            oldboxsize = h;
            DrawSquare(this, xcoordinate, ycoordinate, w, h, Color.Blue);
            xcoordinate = xcoordinate + 100 + 50;
            h = h * 0.5 + oldboxsize * 0.8;
        }


        ///calling the subrourine of the obstacle2 ( it is an object ) to become six obstacles 
        int y = 7;
        double h1 = 150;
        double w1 = 90;
        double xcoordinate1 = -400;
        double ycoordinate2 = 300;
        for (int i = 0; i < y; i++)
        {
            DrawSquare(this, xcoordinate1, ycoordinate2, w1, h1, Color.Green);
            xcoordinate1 = xcoordinate1 + 100 + 50;
        }


        /// calling the subroutine of the Stars for the lower part
        int s = 6;
        double h2 = 50;
        double w2 = 50;
        double xcoordinate2 = -215;
        double ycoordinate3 = -350;
        for (int i = 1; i < s; i++)
        {
            Stars(this, xcoordinate2, ycoordinate3, w2, h2);
            xcoordinate2 = xcoordinate2 + 75 + 75;
        }


        /// calling the subroutine of the next level for the upper part
        int r = 7;
        double h5 = 50;
        double w5 = 50;
        double xcoordinate4 = -325;
        double ycoordinate5 = 350;
        for (int i = 1; i < r; i++)
        {
            Stars(this, xcoordinate4, ycoordinate5, w5, h5);
            xcoordinate4 = xcoordinate4 + 75 + 75;
        }
    }


    /// <summary>
    /// The Second Level
    /// </summary>
    public void SecondMap()
    {
        ClearAll();
        MessageDisplay.Add("Taso 2!");
        Camera.ZoomToLevel();
        Level.CreateBorders();
        Level.Background.CreateGradient(Color.Magenta, Color.Yellow);


        /// calling the Subroutine of the ball
        DrawBall(this, 0, 0);


        ///calling the subrourine of the obstacle1 ( it is an object ) to become six obstacles 
        int s = 6;
        double h = 50;
        double w = 90;
        double xcoordinate = -320;
        double ycoordinate = -350;
        ///double oldboxsize = 0;

        for (int i = 0; i < s; i++)
        {
            ///oldboxsize = h;
            DrawSquare(this, xcoordinate, ycoordinate, w, h, Color.Blue);
            xcoordinate = xcoordinate + 100 + 50;
            /// h = h * 0.5 + oldboxsize * 0.8;
        }


        ///calling the subrourine of the obstacle1 ( it is an object ) to become seven obstacles 
        ///int a = 6;
        double xcoordinate1 = -420;
        double ycoordinate1 = -230;
        ///double oldboxsize = 0;

        for (int i = 0; i < s; i++)
        {
            ///oldboxsize = h;
            DrawSquare(this, xcoordinate1, ycoordinate1, w, h, Color.Red);
            xcoordinate1 = xcoordinate1 + 100 + 50;
            /// h = h * 0.5 + oldboxsize * 0.8;
        }


        ///calling the subrourine of the obstacle1 ( it is an object ) to become six obstacles 
        ///int aa = 6;
        double xcoordinate2 = -320;
        double ycoordinate2 = -110;
        ///double oldboxsize = 0;

        for (int i = 0; i < s; i++)
        {
            ///oldboxsize = h;
            DrawSquare(this, xcoordinate2, ycoordinate2, w, h, Color.Pink);
            xcoordinate2 = xcoordinate2 + 100 + 50;
            /// h = h * 0.5 + oldboxsize * 0.8;
        }


        ///calling the subrourine of the obstacle1 ( it is an object ) to become six obstacles 
        ///int d = 6;
        double xcoordinate3 = -420;
        double ycoordinate3 = 0;
        ///double oldboxsize = 0;

        for (int i = 0; i < s; i++)
        {
            ///oldboxsize = h;
            DrawSquare(this, xcoordinate3, ycoordinate3, w, h, Color.Orange);
            xcoordinate3 = xcoordinate3 + 100 + 50;
            /// h = h * 0.5 + oldboxsize * 0.8;
        }


        ///calling the subrourine of the obstacle1 ( it is an object ) to become six obstacles 
        ///int t = 6;
        double xcoordinate4 = -320;
        double ycoordinate4 = 120;
        ///double oldboxsize = 0;

        for (int i = 0; i < s; i++)
        {
            ///oldboxsize = h;
            DrawSquare(this, xcoordinate4, ycoordinate4, w, h, Color.Purple);
            xcoordinate4 = xcoordinate4 + 100 + 50;
            /// h = h * 0.5 + oldboxsize * 0.8;
        }


        ///calling the subrourine of the obstacle1 ( it is an object ) to become six obstacles 
        ///int u = 6;
        double xcoordinate5 = -420;
        double ycoordinate5 = 240;
        ///double oldboxsize = 0;

        for (int i = 0; i < s; i++)
        {
            ///oldboxsize = h;
            DrawSquare(this, xcoordinate5, ycoordinate5, w, h, Color.Magenta);
            xcoordinate5 = xcoordinate5 + 100 + 50;
            /// h = h * 0.5 + oldboxsize * 0.8;
        }


        ///calling the subrourine of the obstacle1 ( it is an object ) to become six obstacles 
        ///int r = 6;
        double xcoordinate6 = -320;
        double ycoordinate6 = 350;
        ///double oldboxsize = 0;

        for (int i = 0; i < s; i++)
        {
            ///oldboxsize = h;
            DrawSquare(this, xcoordinate6, ycoordinate6, w, h, Color.Olive);
            xcoordinate6 = xcoordinate6 + 100 + 50;
            /// h = h * 0.5 + oldboxsize * 0.8;
        }


        /// calling the subroutine of the Stars 
        ///int k = 6;
        double h1 = 30;
        double w1 = 30;
        double xcoordinate7 = -250;
        double ycoordinate7 = -360;
        for (int i = 1; i < s; i++)
        {
            Stars(this, xcoordinate7, ycoordinate7, w1, h1);
            xcoordinate7 = xcoordinate7 + 75 + 75;
        }


        /// calling the subroutine of the Stars 
        ///int y = 6;
        
        double xcoordinate8 = -350;
        double ycoordinate8 = -230;
        for (int i = 1; i < s; i++)
        {
            Stars(this, xcoordinate8, ycoordinate8, w1, h1);
            xcoordinate8 = xcoordinate8 + 75 + 75;
        }


        /// calling the subroutine of the Stars 
        int g = 6;
        double xcoordinate9 = -250;
        double ycoordinate9 = -105;
        for (int i = 1; i < g; i++)
        {
            Stars(this, xcoordinate9, ycoordinate9, w1, h1);
            xcoordinate9 = xcoordinate9 + 75 + 75;
        }


        /// calling the subroutine of the Stars 
        ///int l = 6;
        double xcoordinate10 = -350;
        double ycoordinate10 = 0;
        for (int i = 1; i < s; i++)
        {
            Stars(this, xcoordinate10, ycoordinate10, w1, h1);
            xcoordinate10 = xcoordinate10 + 75 + 75;
        }


        /// calling the subroutine of the Stars 
        ///int m = 6;
        double xcoordinate11 = -250;
        double ycoordinate11 = 120;
        for (int i = 1; i < s; i++)
        {
            Stars(this, xcoordinate11, ycoordinate11, w1, h1);
            xcoordinate11 = xcoordinate11 + 75 + 75;
        }


        /// calling the subroutine of the Stars 
        ///int o = 6;
        double xcoordinate12 = -350;
        double ycoordinate12 = 240;
        for (int i = 1; i < s; i++)
        {
            Stars(this, xcoordinate12, ycoordinate12, w1, h1);
            xcoordinate12 = xcoordinate12 + 75 + 75;
        }


        /// calling the subroutine of the Stars 
        ///int p = 6;
        double xcoordinate13 = -250;
        double ycoordinate13 = 350;
        for (int i = 1; i < s; i++)
        {
            Stars(this, xcoordinate13, ycoordinate13, w1, h1);
            xcoordinate13 = xcoordinate13 + 75 + 75;
        }

        Buttons();

    }

    public void ThirdMap()
    {
        ClearAll();
        MessageDisplay.Add("Onnittelut!");
        Level.Size = Screen.Size;
        // Level.Width = Screen.Width
        // Level.Height = Screen.Height;
        Camera.ZoomToLevel();
        Level.CreateBorders();
        Level.Background.Image = LoadImage("cup");
        MessageDisplay.Position = new Vector(20, 150);
        ///Level.Background.Color = Color.Red;


        Buttons();
    }
}